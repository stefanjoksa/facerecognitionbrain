{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Joksa\\\\Desktop\\\\facerecognitionbrain\\\\src\\\\App.js\";\nimport React, { Component } from \"react\";\nimport Navigation from \"./components/Navigation/Navigation\";\nimport Clarifai from \"clarifai\";\nimport Logo from \"./components/Logo/Logo\";\nimport ImageLinkForm from \"./components/ImageLinkForm/ImageLinkForm\";\nimport Rank from \"./components/Rank/Rank\";\nimport FaceRecognition from \"./components/FaceRecognition/FaceRecognition\";\nimport PEffects from \"./components/PEffects/PEffects\";\nimport \"./App.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst app = new Clarifai.App({\n  apiKey: \"e3d7c7c9f8f943369e8014e2752a8b21\"\n});\nconst raw = JSON.stringify({\n  user_app_id: {\n    user_id: \"clarifai\",\n    app_id: \"main\"\n  },\n  inputs: [{\n    data: {\n      image: {\n        url: \"https://samples.clarifai.com/metro-north.jpg\"\n      }\n    }\n  }]\n});\nconst requestOptions = {\n  method: \"POST\",\n  headers: {\n    Accept: \"application/json\",\n    Authorization: \"Key {e3d7c7c9f8f943369e8014e2752a8b21}\"\n  },\n  body: raw\n};\n\nclass App extends Component {\n  constructor() {\n    super();\n\n    this.onInputChange = event => {\n      console.log(event.target.value);\n    };\n\n    this.onButtonSubmit = () => {\n      this.setState({\n        imageUrl: this.state.input\n      }); // NOTE: MODEL_VERSION_ID is optional, you can also call prediction with the MODEL_ID only\n      // https://api.clarifai.com/v2/models/{YOUR_MODEL_ID}/outputs\n      // this will default to the latest version_id\n\n      fetch(\"https://api.clarifai.com/v2/models/face-detection/versions/6dc7e46bc9124c5c8824be4822abe105/outputs\", requestOptions).then(response => response.text()).then(result => console.log(result)).catch(error => console.log(\"error\", error));\n    };\n\n    this.state = {\n      input: \"\",\n      imageUrl: ''\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"App\",\n      children: [/*#__PURE__*/_jsxDEV(PEffects, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Navigation, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Logo, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Rank, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(ImageLinkForm, {\n        onInputChange: this.onInputChange,\n        onButtonSubmit: this.onButtonSubmit\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(FaceRecognition, {\n        imageUrl: this.state.imageUrl\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default App;","map":{"version":3,"names":["React","Component","Navigation","Clarifai","Logo","ImageLinkForm","Rank","FaceRecognition","PEffects","app","App","apiKey","raw","JSON","stringify","user_app_id","user_id","app_id","inputs","data","image","url","requestOptions","method","headers","Accept","Authorization","body","constructor","onInputChange","event","console","log","target","value","onButtonSubmit","setState","imageUrl","state","input","fetch","then","response","text","result","catch","error","render"],"sources":["C:/Users/Joksa/Desktop/facerecognitionbrain/src/App.js"],"sourcesContent":["import React, { Component } from \"react\";\nimport Navigation from \"./components/Navigation/Navigation\";\nimport Clarifai from \"clarifai\";\nimport Logo from \"./components/Logo/Logo\";\nimport ImageLinkForm from \"./components/ImageLinkForm/ImageLinkForm\";\nimport Rank from \"./components/Rank/Rank\";\nimport FaceRecognition from \"./components/FaceRecognition/FaceRecognition\";\nimport PEffects from \"./components/PEffects/PEffects\";\nimport \"./App.css\";\n\nconst app = new Clarifai.App({\n  apiKey: \"e3d7c7c9f8f943369e8014e2752a8b21\",\n});\n\nconst raw = JSON.stringify({\n  user_app_id: {\n    user_id: \"clarifai\",\n    app_id: \"main\",\n  },\n  inputs: [\n    {\n      data: {\n        image: {\n          url: \"https://samples.clarifai.com/metro-north.jpg\",\n        },\n      },\n    },\n  ],\n});\n\nconst requestOptions = {\n  method: \"POST\",\n  headers: {\n    Accept: \"application/json\",\n    Authorization: \"Key {e3d7c7c9f8f943369e8014e2752a8b21}\",\n  },\n  body: raw,\n};\n\nclass App extends Component {\n  constructor() {\n    super();\n    this.state = {\n      input: \"\",\n      imageUrl: ''\n    };\n  }\n\n  onInputChange = (event) => {\n    console.log(event.target.value);\n  };\n\n  onButtonSubmit = () => {\n    this.setState({imageUrl: this.state.input})\n    // NOTE: MODEL_VERSION_ID is optional, you can also call prediction with the MODEL_ID only\n    // https://api.clarifai.com/v2/models/{YOUR_MODEL_ID}/outputs\n    // this will default to the latest version_id\n\n    fetch(\n      \"https://api.clarifai.com/v2/models/face-detection/versions/6dc7e46bc9124c5c8824be4822abe105/outputs\",\n      requestOptions\n    )\n      .then((response) => response.text())\n      .then((result) => console.log(result))\n      .catch((error) => console.log(\"error\", error));\n  };\n\n  render() {\n    return (\n      <div className=\"App\">\n        <PEffects />\n        <Navigation />\n        <Logo />\n        <Rank />\n        <ImageLinkForm\n          onInputChange={this.onInputChange}\n          onButtonSubmit={this.onButtonSubmit}\n        />\n        <FaceRecognition imageUrl={this.state.imageUrl} />\n      </div>\n    );\n  }\n}\n\nexport default App;\n"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,UAAP,MAAuB,oCAAvB;AACA,OAAOC,QAAP,MAAqB,UAArB;AACA,OAAOC,IAAP,MAAiB,wBAAjB;AACA,OAAOC,aAAP,MAA0B,0CAA1B;AACA,OAAOC,IAAP,MAAiB,wBAAjB;AACA,OAAOC,eAAP,MAA4B,8CAA5B;AACA,OAAOC,QAAP,MAAqB,gCAArB;AACA,OAAO,WAAP;;AAEA,MAAMC,GAAG,GAAG,IAAIN,QAAQ,CAACO,GAAb,CAAiB;EAC3BC,MAAM,EAAE;AADmB,CAAjB,CAAZ;AAIA,MAAMC,GAAG,GAAGC,IAAI,CAACC,SAAL,CAAe;EACzBC,WAAW,EAAE;IACXC,OAAO,EAAE,UADE;IAEXC,MAAM,EAAE;EAFG,CADY;EAKzBC,MAAM,EAAE,CACN;IACEC,IAAI,EAAE;MACJC,KAAK,EAAE;QACLC,GAAG,EAAE;MADA;IADH;EADR,CADM;AALiB,CAAf,CAAZ;AAgBA,MAAMC,cAAc,GAAG;EACrBC,MAAM,EAAE,MADa;EAErBC,OAAO,EAAE;IACPC,MAAM,EAAE,kBADD;IAEPC,aAAa,EAAE;EAFR,CAFY;EAMrBC,IAAI,EAAEf;AANe,CAAvB;;AASA,MAAMF,GAAN,SAAkBT,SAAlB,CAA4B;EAC1B2B,WAAW,GAAG;IACZ;;IADY,KAQdC,aARc,GAQGC,KAAD,IAAW;MACzBC,OAAO,CAACC,GAAR,CAAYF,KAAK,CAACG,MAAN,CAAaC,KAAzB;IACD,CAVa;;IAAA,KAYdC,cAZc,GAYG,MAAM;MACrB,KAAKC,QAAL,CAAc;QAACC,QAAQ,EAAE,KAAKC,KAAL,CAAWC;MAAtB,CAAd,EADqB,CAErB;MACA;MACA;;MAEAC,KAAK,CACH,qGADG,EAEHlB,cAFG,CAAL,CAIGmB,IAJH,CAISC,QAAD,IAAcA,QAAQ,CAACC,IAAT,EAJtB,EAKGF,IALH,CAKSG,MAAD,IAAYb,OAAO,CAACC,GAAR,CAAYY,MAAZ,CALpB,EAMGC,KANH,CAMUC,KAAD,IAAWf,OAAO,CAACC,GAAR,CAAY,OAAZ,EAAqBc,KAArB,CANpB;IAOD,CAzBa;;IAEZ,KAAKR,KAAL,GAAa;MACXC,KAAK,EAAE,EADI;MAEXF,QAAQ,EAAE;IAFC,CAAb;EAID;;EAqBDU,MAAM,GAAG;IACP,oBACE;MAAK,SAAS,EAAC,KAAf;MAAA,wBACE,QAAC,QAAD;QAAA;QAAA;QAAA;MAAA,QADF,eAEE,QAAC,UAAD;QAAA;QAAA;QAAA;MAAA,QAFF,eAGE,QAAC,IAAD;QAAA;QAAA;QAAA;MAAA,QAHF,eAIE,QAAC,IAAD;QAAA;QAAA;QAAA;MAAA,QAJF,eAKE,QAAC,aAAD;QACE,aAAa,EAAE,KAAKlB,aADtB;QAEE,cAAc,EAAE,KAAKM;MAFvB;QAAA;QAAA;QAAA;MAAA,QALF,eASE,QAAC,eAAD;QAAiB,QAAQ,EAAE,KAAKG,KAAL,CAAWD;MAAtC;QAAA;QAAA;QAAA;MAAA,QATF;IAAA;MAAA;MAAA;MAAA;IAAA,QADF;EAaD;;AA1CyB;;AA6C5B,eAAe3B,GAAf"},"metadata":{},"sourceType":"module"}