{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Joksa\\\\Desktop\\\\facerecognitionbrain\\\\src\\\\App.js\";\nimport React, { Component } from \"react\";\nimport Navigation from \"./components/Navigation/Navigation\";\nimport Clarifai from \"clarifai\";\nimport Logo from \"./components/Logo/Logo\";\nimport ImageLinkForm from \"./components/ImageLinkForm/ImageLinkForm\";\nimport Rank from \"./components/Rank/Rank\";\nimport FaceRecognition from \"./components/FaceRecognition/FaceRecognition\";\nimport PEffects from \"./components/PEffects/PEffects\";\nimport \"./App.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst app = new Clarifai.App({\n  apiKey: \"e3d7c7c9f8f943369e8014e2752a8b21\"\n}); // const raw = JSON.stringify({\n//   user_app_id: {\n//     user_id: \"clarifai\",\n//     app_id: \"main\",\n//   },\n//   inputs: [\n//     {\n//       data: {\n//         image: {\n//           url: \"https://samples.clarifai.com/metro-north.jpg\",\n//         },\n//       },\n//     },\n//   ],\n// });\n// const requestOptions = {\n//   method: \"POST\",\n//   headers: {\n//     Accept: \"application/json\",\n//     Authorization: \"Key {e3d7c7c9f8f943369e8014e2752a8b21}\",\n//   },\n//   body: raw,\n// };\n\nclass App extends Component {\n  constructor() {\n    super();\n\n    this.calculateFaceLocation = data => {};\n\n    this.onInputChange = event => {\n      this.setState({\n        input: event.target.value\n      });\n    };\n\n    this.onButtonSubmit = () => {\n      this.setState({\n        imageUrl: this.state.input\n      }); //   // NOTE: MODEL_VERSION_ID is optional, you can also call prediction with the MODEL_ID only\n      //   // https://api.clarifai.com/v2/models/{YOUR_MODEL_ID}/outputs\n      //   // this will default to the latest version_id\n      //   fetch(\n      //     \"https://api.clarifai.com/v2/models/face-detection/versions/6dc7e46bc9124c5c8824be4822abe105/outputs\",\n      //     requestOptions\n      //   )\n      //     .then((response) => response.text())\n      //     .then((result) => console.log(result))\n      //     .catch((error) => console.log(\"error\", error));\n      // };\n\n      app.models.predict(Clarifai.FACE_DETECT_MODEL, this.state.input).then(response => this.calculateFaceLocation(response));\n    };\n\n    this.state = {\n      input: \"\",\n      imageUrl: \"\",\n      box: {}\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"App\",\n      children: [/*#__PURE__*/_jsxDEV(PEffects, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Navigation, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Logo, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Rank, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(ImageLinkForm, {\n        onInputChange: this.onInputChange,\n        onButtonSubmit: this.onButtonSubmit\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(FaceRecognition, {\n        imageUrl: this.state.imageUrl\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default App;","map":{"version":3,"names":["React","Component","Navigation","Clarifai","Logo","ImageLinkForm","Rank","FaceRecognition","PEffects","app","App","apiKey","constructor","calculateFaceLocation","data","onInputChange","event","setState","input","target","value","onButtonSubmit","imageUrl","state","models","predict","FACE_DETECT_MODEL","then","response","box","render"],"sources":["C:/Users/Joksa/Desktop/facerecognitionbrain/src/App.js"],"sourcesContent":["import React, { Component } from \"react\";\nimport Navigation from \"./components/Navigation/Navigation\";\nimport Clarifai from \"clarifai\";\nimport Logo from \"./components/Logo/Logo\";\nimport ImageLinkForm from \"./components/ImageLinkForm/ImageLinkForm\";\nimport Rank from \"./components/Rank/Rank\";\nimport FaceRecognition from \"./components/FaceRecognition/FaceRecognition\";\nimport PEffects from \"./components/PEffects/PEffects\";\nimport \"./App.css\";\n\nconst app = new Clarifai.App({\n  apiKey: \"e3d7c7c9f8f943369e8014e2752a8b21\",\n});\n\n// const raw = JSON.stringify({\n//   user_app_id: {\n//     user_id: \"clarifai\",\n//     app_id: \"main\",\n//   },\n//   inputs: [\n//     {\n//       data: {\n//         image: {\n//           url: \"https://samples.clarifai.com/metro-north.jpg\",\n//         },\n//       },\n//     },\n//   ],\n// });\n\n// const requestOptions = {\n//   method: \"POST\",\n//   headers: {\n//     Accept: \"application/json\",\n//     Authorization: \"Key {e3d7c7c9f8f943369e8014e2752a8b21}\",\n//   },\n//   body: raw,\n// };\n\nclass App extends Component {\n  constructor() {\n    super();\n    this.state = {\n      input: \"\",\n      imageUrl: \"\",\n      box: {},\n    };\n  }\n\n  calculateFaceLocation = (data) => {};\n\n  onInputChange = (event) => {\n    this.setState({ input: event.target.value });\n  };\n\n  onButtonSubmit = () => {\n    this.setState({ imageUrl: this.state.input });\n    //   // NOTE: MODEL_VERSION_ID is optional, you can also call prediction with the MODEL_ID only\n    //   // https://api.clarifai.com/v2/models/{YOUR_MODEL_ID}/outputs\n    //   // this will default to the latest version_id\n\n    //   fetch(\n    //     \"https://api.clarifai.com/v2/models/face-detection/versions/6dc7e46bc9124c5c8824be4822abe105/outputs\",\n    //     requestOptions\n    //   )\n    //     .then((response) => response.text())\n    //     .then((result) => console.log(result))\n    //     .catch((error) => console.log(\"error\", error));\n    // };\n    app.models\n      .predict(Clarifai.FACE_DETECT_MODEL, this.state.input)\n      .then((response) => this.calculateFaceLocation(response));\n  };\n\n  render() {\n    return (\n      <div className=\"App\">\n        <PEffects />\n        <Navigation />\n        <Logo />\n        <Rank />\n        <ImageLinkForm\n          onInputChange={this.onInputChange}\n          onButtonSubmit={this.onButtonSubmit}\n        />\n        <FaceRecognition imageUrl={this.state.imageUrl} />\n      </div>\n    );\n  }\n}\n\nexport default App;\n"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,UAAP,MAAuB,oCAAvB;AACA,OAAOC,QAAP,MAAqB,UAArB;AACA,OAAOC,IAAP,MAAiB,wBAAjB;AACA,OAAOC,aAAP,MAA0B,0CAA1B;AACA,OAAOC,IAAP,MAAiB,wBAAjB;AACA,OAAOC,eAAP,MAA4B,8CAA5B;AACA,OAAOC,QAAP,MAAqB,gCAArB;AACA,OAAO,WAAP;;AAEA,MAAMC,GAAG,GAAG,IAAIN,QAAQ,CAACO,GAAb,CAAiB;EAC3BC,MAAM,EAAE;AADmB,CAAjB,CAAZ,C,CAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,MAAMD,GAAN,SAAkBT,SAAlB,CAA4B;EAC1BW,WAAW,GAAG;IACZ;;IADY,KASdC,qBATc,GASWC,IAAD,IAAU,CAAE,CATtB;;IAAA,KAWdC,aAXc,GAWGC,KAAD,IAAW;MACzB,KAAKC,QAAL,CAAc;QAAEC,KAAK,EAAEF,KAAK,CAACG,MAAN,CAAaC;MAAtB,CAAd;IACD,CAba;;IAAA,KAedC,cAfc,GAeG,MAAM;MACrB,KAAKJ,QAAL,CAAc;QAAEK,QAAQ,EAAE,KAAKC,KAAL,CAAWL;MAAvB,CAAd,EADqB,CAErB;MACA;MACA;MAEA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;;MACAT,GAAG,CAACe,MAAJ,CACGC,OADH,CACWtB,QAAQ,CAACuB,iBADpB,EACuC,KAAKH,KAAL,CAAWL,KADlD,EAEGS,IAFH,CAESC,QAAD,IAAc,KAAKf,qBAAL,CAA2Be,QAA3B,CAFtB;IAGD,CAhCa;;IAEZ,KAAKL,KAAL,GAAa;MACXL,KAAK,EAAE,EADI;MAEXI,QAAQ,EAAE,EAFC;MAGXO,GAAG,EAAE;IAHM,CAAb;EAKD;;EA2BDC,MAAM,GAAG;IACP,oBACE;MAAK,SAAS,EAAC,KAAf;MAAA,wBACE,QAAC,QAAD;QAAA;QAAA;QAAA;MAAA,QADF,eAEE,QAAC,UAAD;QAAA;QAAA;QAAA;MAAA,QAFF,eAGE,QAAC,IAAD;QAAA;QAAA;QAAA;MAAA,QAHF,eAIE,QAAC,IAAD;QAAA;QAAA;QAAA;MAAA,QAJF,eAKE,QAAC,aAAD;QACE,aAAa,EAAE,KAAKf,aADtB;QAEE,cAAc,EAAE,KAAKM;MAFvB;QAAA;QAAA;QAAA;MAAA,QALF,eASE,QAAC,eAAD;QAAiB,QAAQ,EAAE,KAAKE,KAAL,CAAWD;MAAtC;QAAA;QAAA;QAAA;MAAA,QATF;IAAA;MAAA;MAAA;MAAA;IAAA,QADF;EAaD;;AAjDyB;;AAoD5B,eAAeZ,GAAf"},"metadata":{},"sourceType":"module"}