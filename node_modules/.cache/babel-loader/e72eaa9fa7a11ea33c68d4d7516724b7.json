{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Joksa\\\\Desktop\\\\facerecognitionbrain\\\\src\\\\components\\\\Effects\\\\Effects.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport Particles from \"react-tsparticles\";\nimport { loadFull } from \"tsparticles\";\nimport { useCallback } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Effects = () => {\n  _s();\n\n  const particlesInit = useCallback(async engine => {\n    console.log(engine); // you can initiate the tsParticles instance (engine) here, adding custom shapes or presets\n    // this loads the tsparticles package bundle, it's the easiest method for getting everything ready\n    // starting from v2 you can add only the features you need reducing the bundle size\n\n    await loadFull(engine);\n  }, []);\n  const particlesLoaded = useCallback(async container => {\n    await console.log(container);\n  }, []);\n  return /*#__PURE__*/_jsxDEV(Particles, {\n    id: \"tsparticles\",\n    url: \"http://foo.bar/particles.json\",\n    init: particlesInit,\n    loaded: particlesLoaded\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 20,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Effects, \"PjleD03JXt5mR6AE5+SxrsWvXBc=\");\n\n_c = Effects;\nexport default Effects;\n\nvar _c;\n\n$RefreshReg$(_c, \"Effects\");","map":{"version":3,"names":["React","Particles","loadFull","useCallback","Effects","particlesInit","engine","console","log","particlesLoaded","container"],"sources":["C:/Users/Joksa/Desktop/facerecognitionbrain/src/components/Effects/Effects.js"],"sourcesContent":["import React from \"react\";\r\nimport Particles from \"react-tsparticles\";\r\nimport { loadFull } from \"tsparticles\";\r\nimport { useCallback } from \"react\";\r\n\r\nconst Effects = () => {\r\n    const particlesInit = useCallback(async (engine) => {\r\n        console.log(engine);\r\n        // you can initiate the tsParticles instance (engine) here, adding custom shapes or presets\r\n        // this loads the tsparticles package bundle, it's the easiest method for getting everything ready\r\n        // starting from v2 you can add only the features you need reducing the bundle size\r\n        await loadFull(engine);\r\n    }, []);\r\n\r\n    const particlesLoaded = useCallback(async (container) => {\r\n        await console.log(container);\r\n    }, []);\r\n\r\n    return (\r\n        <Particles id=\"tsparticles\" url=\"http://foo.bar/particles.json\" init={particlesInit} loaded={particlesLoaded} />\r\n    );\r\n};\r\n\r\nexport default Effects;"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,mBAAtB;AACA,SAASC,QAAT,QAAyB,aAAzB;AACA,SAASC,WAAT,QAA4B,OAA5B;;;AAEA,MAAMC,OAAO,GAAG,MAAM;EAAA;;EAClB,MAAMC,aAAa,GAAGF,WAAW,CAAC,MAAOG,MAAP,IAAkB;IAChDC,OAAO,CAACC,GAAR,CAAYF,MAAZ,EADgD,CAEhD;IACA;IACA;;IACA,MAAMJ,QAAQ,CAACI,MAAD,CAAd;EACH,CANgC,EAM9B,EAN8B,CAAjC;EAQA,MAAMG,eAAe,GAAGN,WAAW,CAAC,MAAOO,SAAP,IAAqB;IACrD,MAAMH,OAAO,CAACC,GAAR,CAAYE,SAAZ,CAAN;EACH,CAFkC,EAEhC,EAFgC,CAAnC;EAIA,oBACI,QAAC,SAAD;IAAW,EAAE,EAAC,aAAd;IAA4B,GAAG,EAAC,+BAAhC;IAAgE,IAAI,EAAEL,aAAtE;IAAqF,MAAM,EAAEI;EAA7F;IAAA;IAAA;IAAA;EAAA,QADJ;AAGH,CAhBD;;GAAML,O;;KAAAA,O;AAkBN,eAAeA,OAAf"},"metadata":{},"sourceType":"module"}